// <auto-generated />
using System;
using DogApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DogApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240306114954_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DogApp.Modellayer.Model.ItemList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemList");
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.Items.Difficulty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Beginner"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Expert"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Champion"
                        });
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.Items.Item", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlacementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlacementId");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.Items.Placement", b =>
                {
                    b.Property<int>("PlacementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlacementId"));

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("PlacementId");

                    b.ToTable("Placements");
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.Items.Extra", b =>
                {
                    b.HasBaseType("DogApp.Modellayer.Model.Items.Item");

                    b.HasDiscriminator().HasValue("Extra");
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.Items.Sign", b =>
                {
                    b.HasBaseType("DogApp.Modellayer.Model.Items.Item");

                    b.Property<int?>("DifficultyId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasIndex("DifficultyId");

                    b.HasDiscriminator().HasValue("Sign");
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.Items.Item", b =>
                {
                    b.HasOne("DogApp.Modellayer.Model.ItemList", "ItemList")
                        .WithMany("Items")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogApp.Modellayer.Model.Items.Placement", "Placement")
                        .WithMany("Items")
                        .HasForeignKey("PlacementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemList");

                    b.Navigation("Placement");
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.Items.Sign", b =>
                {
                    b.HasOne("DogApp.Modellayer.Model.Items.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId");

                    b.Navigation("Difficulty");
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.ItemList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DogApp.Modellayer.Model.Items.Placement", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
